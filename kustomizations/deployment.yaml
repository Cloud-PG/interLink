---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-vk
  labels:
    nodeName: test-vk
spec:
  replicas: 1
  selector:
    matchLabels:
      nodeName: test-vk
  template:
    metadata:
      labels:
        nodeName: test-vk
    spec:
      containers:
      - name: test-vk
        image: docker.io/surax98/vk:latest
        imagePullPolicy: Always
        args:
        - --nodename
        - test-vk
        - --provider
        - knoc
        - --provider-config
        - $VK_CONFIG_PATH
        - --startup-timeout
        - 10s
        - --klog.v
        - "2"
        - --klog.logtostderr
        - --log-level
        - debug
        env:
        - name: KUBELET_PORT
          value: "10250"
        - name: VKUBELET_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INTERLINKCONFIGPATH
          value: "/etc/interlink/InterLinkConfig.yaml"
        - name: VK_CONFIG_PATH
          value: "/etc/interlink/knoc-cfg.json"
        volumeMounts:
        - name: config
          mountPath: /etc/interlink/InterLinkConfig.yaml
          subPath: InterLinkConfig.yaml
        - name: config-json
          mountPath: /etc/interlink/knoc-cfg.json
          subPath: knoc-cfg.json
      serviceAccountName: knoc
      volumes:
      - name: config
        configMap:
          # Provide the name of the ConfigMap you want to mount.
          name: vk-config
      - name: config-json
        configMap:
          # Provide the name of the ConfigMap you want to mount.
          name: test-vk-config


